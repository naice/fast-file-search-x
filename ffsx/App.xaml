<Application x:Class="ffsx.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="clr-namespace:BindingConverter"
             xmlns:l="clr-namespace:ffsx"
             xmlns:v="clr-namespace:ffsx.ViewModel"
             xmlns:c="clr-namespace:ffsx.Controls"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:t="http://schemas.xceed.com/wpf/xaml/toolkit"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!-- BINDING CONVERTERS -->
        <b:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <b:WpfFileIconCacheConverter x:Key="WpfFileIconCacheConverter"/>
        <b:FileSizeConverter x:Key="FileSizeConverter"/>
        <b:FileMaskConverter x:Key="FileMaskConverter"/>

        <!-- MODELS -->
        <l:Settings x:Key="Settings" />
        <v:MainViewModel x:Key="MainViewModel"/>

        <!-- GLOBAL STYLES -->
        
        <SolidColorBrush x:Key="AppBackground" Color="#FF252525"/>
        <SolidColorBrush x:Key="AppForeground" Color="#ffCCCCCC"/>
        <SolidColorBrush x:Key="AppSubtitle" Color="#FF707070"/>
        <SolidColorBrush x:Key="AppBorder" Color="#FF5D5D5D"/>
        <Thickness x:Key="AppBorderThickness">0</Thickness>
        <Color x:Key="AppAccentColor" >#FFFF8E1D</Color>
        <SolidColorBrush x:Key="AppAccent" Color="{StaticResource AppAccentColor}"/>
        <Color x:Key="AppButtonBackgroundColor">#FF303030</Color>
        <SolidColorBrush x:Key="AppButtonBackgroundBrush" Color="{StaticResource AppButtonBackgroundColor}"/>
        <Color x:Key="AppButtonHighlightColor">#FF555555</Color>
        <SolidColorBrush x:Key="AppButtonHighlightBrush" Color="{StaticResource AppButtonHighlightColor}"/>
        <Style TargetType="Border" x:Key="AppBorderStyle">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Background" Value="{StaticResource AppButtonBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource AppForeground}" />
            <Setter Property="Padding" Value="4,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Control.IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource AppForeground}" />
                                <Setter Property="Background" Value="{StaticResource AppButtonHighlightBrush}" />
                                <Setter Property="BorderBrush" Value="{x:Null}" />
                            </Trigger>
                            <Trigger Property="Control.IsFocused" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource AppForeground}" />
                                <Setter Property="Background" Value="{StaticResource AppButtonHighlightBrush}" />
                                <Setter Property="BorderBrush" Value="{x:Null}" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource AppForeground}" />
                                <Setter Property="Background" Value="{StaticResource AppButtonBackgroundBrush}" />
                                <Setter Property="BorderThickness" Value="1,1,0,0"/>
                                <Setter Property="BorderBrush" Value="{StaticResource AppButtonHighlightBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource AppForeground}"/>
        </Style>
        <Style TargetType="t:WatermarkTextBox" x:Key="StyleWatermarkTextBox">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="{StaticResource AppBorderThickness}"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="WatermarkTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Foreground="{StaticResource AppSubtitle}" Text="{Binding}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource AppButtonBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource AppForeground}" />
            <Setter Property="CaretBrush" Value="{StaticResource AppAccent}" />
        </Style>
        <Style TargetType="ListBox" x:Key="StyleListBox">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Background" Value="{StaticResource AppBackground}" />
            <Setter Property="Foreground" Value="{StaticResource AppForeground}" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Grid>
                                        <Border Background="{StaticResource AppBackground}"
                                                x:Name="HoverBorder">
                                            <Border Background="{x:Null}" 
                                                    x:Name="SelectionBorder">
                                                <ContentPresenter />
                                            </Border>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="SelectionBorder" Property="Background" Value="{StaticResource AppButtonHighlightBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="HoverBorder" Property="Background" Value="{StaticResource AppButtonBackgroundBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ScrollViewer x:Name="ScrollViewer" Template="{DynamicResource AppleStyleScrollBarStyle}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="DirectoryViewerItemTemplate">
            <StackPanel Orientation="Horizontal" x:Name="DirectoryViewerItem">
                <Image Source="/Res/loading.png" Width="16" Height="16" Margin="-20,0,0,0" RenderTransformOrigin=".5,.5" 
                       Visibility="{Binding Populating, Converter={StaticResource BoolToVisibilityConverter}}" Opacity="0">
                    <Image.RenderTransform>
                        <RotateTransform  Angle="0" />
                    </Image.RenderTransform>
                    <Image.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Populating}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Name="StoryboardPopulation">
                                            <Storyboard>
                                                <DoubleAnimation BeginTime="00:00:00.50" Storyboard.TargetProperty="Opacity"
                                                                 Duration="0:0:0.00" To="1"/>
                                                <DoubleAnimation BeginTime="00:00:00.50" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" To="-360" 
                                                                 Duration="0:0:0.5" RepeatBehavior="Forever" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="StoryboardPopulation"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Grid Width="16" Height="16">
                    <Image Source="{Binding WpfIconKey, Converter={StaticResource WpfFileIconCacheConverter}}"/>
                </Grid>
                <TextBlock Text="{Binding}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="DirectoryViewerItemSeperatorTemplate">
            <Grid MinHeight="32" IsHitTestVisible="False" Margin="-12,0,0,0">
                <TextBlock Text="{Binding}" Foreground="{StaticResource AppForeground}" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>
        <Style TargetType="c:DirectoryViewer">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Background" Value="{StaticResource AppBackground}" />
            <Setter Property="Foreground" Value="{StaticResource AppForeground}" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type c:DirectoryViewer}">
                        <Grid>
                            <ScrollViewer x:Name="ScrollViewer" Template="{DynamicResource AppleStyleScrollBarStyle}">
                                <ItemsPresenter/>
                            </ScrollViewer>
                            <Grid x:Name="FavoritesPanel" Background="{StaticResource AppBackground}" VerticalAlignment="Top" RenderTransformOrigin=".5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Image Grid.Column="0" Margin="3" Source="/Res/favorite.png" Width="16" Height="16"/>
                                <TextBlock Grid.Column="1" Margin="3" VerticalAlignment="Center" Text="Favorites" />

                                <TextBlock Grid.Column="2" Margin="3" x:Name="FavoriteHint" VerticalAlignment="Center" Text="Select a item first." Foreground="{StaticResource AppSubtitle}" />
                                <Button Grid.Column="2" Margin="3,3,0,3" x:Name="BtnAddFavorite" Visibility="Hidden">
                                    <Button.Content>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/Res/add.png" Height="13" Width="13"/>
                                        </StackPanel>
                                    </Button.Content>
                                </Button>
                                <Button Grid.Column="3" Margin="3" x:Name="BtnRemoveFavorite" Visibility="Hidden">
                                    <Button.Content>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/Res/remove.png" Height="13" Width="13"/>
                                        </StackPanel>
                                    </Button.Content>
                                </Button>

                                <Border Grid.ColumnSpan="4" Height="1" VerticalAlignment="Bottom" Background="{StaticResource AppBorder}" />
                            </Grid>
                            <Popup x:Name="FavoriteEditPopup" PlacementTarget="{TemplateBinding SelectedItem}"
                                Placement="Bottom" Focusable="False" AllowsTransparency="True"
                                PopupAnimation="Fade">
                                <Border BorderThickness="1" BorderBrush="{StaticResource AppBorder}" Padding="3">
                                    <!--<TextBox Text="{Binding Selec}"/>-->
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>  
        <Style x:Key="AppleStyleScrollBarThumb" TargetType="{x:Type Thumb}">  
            <Setter Property="OverridesDefaultStyle" Value="true"/>  
            <Setter Property="IsTabStop" Value="false"/>  
            <Setter Property="Template">  
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{StaticResource AppButtonBackgroundBrush}" Name="Border" BorderThickness="0,0,1,0" Height="Auto" CornerRadius="4" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource AppButtonHighlightBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>  
                </Setter.Value>  
            </Setter>  
        </Style>
        <Style x:Key="AppleStyleHorizontalScrollStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">  
                <Setter.Value>  
                    <ControlTemplate TargetType="{x:Type ScrollBar}">  
                        <Grid x:Name="Bg" Background="{TemplateBinding Background}" Height="10" SnapsToDevicePixels="true" Margin="0">  
                            <Track x:Name="PART_Track" IsDirectionReversed="false" IsEnabled="{TemplateBinding IsMouseOver}">  
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource AppleStyleScrollBarThumb}" Cursor="Hand"/>  
                                </Track.Thumb>  
                            </Track>  
                        </Grid>  
                        <ControlTemplate.Triggers>  
                            <Trigger Property="IsEnabled" Value="false">  
                                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>  
                            </Trigger>  
                        </ControlTemplate.Triggers>  
                    </ControlTemplate>  
                </Setter.Value>  
            </Setter>  
        </Style>
        <Style x:Key="AppleStyleVerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">  
                <Setter.Value>  
                    <ControlTemplate TargetType="{x:Type ScrollBar}">  
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Width="10" HorizontalAlignment="Right" Margin="0">   
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">  
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource AppleStyleScrollBarThumb}" Cursor="Hand"/>  
                                </Track.Thumb>  
                            </Track>  
                        </Grid>  
                    </ControlTemplate>  
                </Setter.Value>  
            </Setter>  
        </Style>  
        <ControlTemplate x:Key="AppleStyleScrollBarStyle" TargetType="{x:Type ScrollViewer}">  
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">  
                <Grid.ColumnDefinitions>  
                    <ColumnDefinition Width="*"/>  
                    <ColumnDefinition Width="Auto"/>  
                </Grid.ColumnDefinitions>  
                <Grid.RowDefinitions>  
                    <RowDefinition Height="*"/>  
                    <RowDefinition Height="Auto"/>  
                </Grid.RowDefinitions>  
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{x:Null}" Grid.Row="1"/>  
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}"   
                                        CanHorizontallyScroll="False" CanVerticallyScroll="False"   
                                        ContentTemplate="{TemplateBinding ContentTemplate}"   
                                        Content="{TemplateBinding Content}" Grid.Column="0"   
                                        Margin="{TemplateBinding Padding}" Grid.Row="0"/>  
                <ScrollBar x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"   
                           AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1"   
                           Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0"   
                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"   
                           ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource AppleStyleVerticalScrollBarStyle}"   
                           Background="{x:Null}" Width="Auto" Margin="0"/>  
                <ScrollBar x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"   
                           AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0"   
                           Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1"   
                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"   
                           ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource AppleStyleHorizontalScrollStyle}"/>  
            </Grid>  
        </ControlTemplate>

        <!-- TAB CONTROL -->
        
        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid Name="Container" Margin="0,0,0,-1">
                            <Border Name="Border" Padding="2" BorderThickness="1" CornerRadius="5,5,0,0" >
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Header"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AppButtonHighlightBrush}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AppButtonHighlightBrush}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AppBorder}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AppBackground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TabControl">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0,1,0,0"/>
            <Setter Property="BorderBrush" Value="{StaticResource AppBorder}" />
            <Setter Property="Background" Value="{StaticResource AppBackground}" />
            <Setter Property="Foreground" Value="{StaticResource AppForeground}" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>
        
        <!-- COMBOBOX -->

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="16" />
                </Grid.ColumnDefinitions>
                <Border
                    BorderBrush="{StaticResource AppBorder}"
                    BorderThickness="{StaticResource AppBorderThickness}"
                    Name="Border"
                    Background="{StaticResource AppButtonBackgroundBrush}"
                    Grid.ColumnSpan="2" />
                <Path
                    Margin="0,0,3,0"
                    Data="M0,0L4,4 8,0z"
                    HorizontalAlignment="Center"
                    Fill="{StaticResource AppForeground}"
                    Name="Arrow"
                    VerticalAlignment="Center"
                    Width="8"
                    Grid.Column="1" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource AppButtonHighlightBrush}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource AppButtonBackgroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource AppAccent}"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <!--
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource DisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="Border" Value="{StaticResource DisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource AppForeground}"/>
                    -->
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="TextBox" x:Key="ComboBoxTextBoxStyle">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="{StaticResource AppBorderThickness}"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Background" Value="{StaticResource AppButtonBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource AppForeground}" />
            <Setter Property="CaretBrush" Value="{StaticResource AppAccent}" />
        </Style>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="TextElement.Foreground"  Value="{StaticResource AppForeground}"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border
                            Name="Border"
                            SnapsToDevicePixels="True"
                            Padding="2,2,2,2">
                            <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                Content="{TemplateBinding ContentControl.Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource AppButtonHighlightBrush}"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <!--<Setter Property="TextElement.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="{StaticResource AppForeground}"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                ClickMode="Press"
                                Name="ToggleButton"
                                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Focusable="False"
                                Grid.Column="2"
                                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                            <ContentPresenter
                                Margin="3,3,23,3"
                                HorizontalAlignment="Stretch"
                                Name="ContentSite"
                                VerticalAlignment="Center"
                                ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                IsHitTestVisible="False" />
                            <TextBox
                                Margin="3,3,23,3"
                                Visibility="Hidden"
                                HorizontalAlignment="Stretch"
                                Name="PART_EditableTextBox"
                                Background="Transparent"
                                VerticalAlignment="Center"
                                IsReadOnly="False"
                                Style="{StaticResource ComboBoxTextBoxStyle}"
                                Focusable="True"/>
                            <Popup
                                Placement="Bottom"
                                Name="Popup"
                                Focusable="False"
                                AllowsTransparency="True"
                                IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                PopupAnimation="Fade">
                                <Grid
                                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                    Name="DropDown"
                                    SnapsToDevicePixels="True">
                                    <Border
                                        BorderBrush="{StaticResource AppBorder}"
                                        BorderThickness="1,1,1,1"
                                        CornerRadius="0"
                                        Name="DropDownBorder"
                                        Background="{StaticResource AppBackground}"/>
                                    <ScrollViewer
                                        Margin="4,6,4,6"
                                        SnapsToDevicePixels="True"
                                        Template="{DynamicResource AppleStyleScrollBarStyle}">
                                        <ItemsPresenter
                                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource AppForeground}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="Window.AllowsTransparency" SourceName="Popup" Value="True">
                                <Setter Property="FrameworkElement.Margin" TargetName="DropDownBorder" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Application.Resources>
</Application>
